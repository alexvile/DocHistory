// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  COMMITER
  VIEWER
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role
  email     String    @unique
  password  String
  firstName String
  lastName  String
  products  Product[] @relation("UserProducts")
  // todo - if we remove customer - we leave his norms and changes
  changes   Change[]  @relation("UserChanges")
}

model Product {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  productTitle String   @unique
  code         String?
  norms        Json
  creator      User     @relation("UserProducts", fields: [creatorId], references: [id])
  creatorId    String   @db.ObjectId
  changes      Change[] @relation("ProductChanges")
}

model Change {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  creator   User     @relation("UserChanges", fields: [creatorId], references: [id])
  creatorId String   @db.ObjectId
  product   Product  @relation("ProductChanges", fields: [productId], references: [id])
  productId String   @db.ObjectId
  changes   Json

  @@index([productId])
  @@index([creatorId])
  @@index([createdAt])
}
// JSON з інформацією про зміни: { field: "value_before", newValue: "value_after" }

